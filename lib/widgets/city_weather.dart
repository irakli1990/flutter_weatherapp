import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:sunshine/backend/bloc.dart';import 'package:sunshine/widgets/search_button.dart';import 'package:sunshine/widgets/show_weather.dart';import 'package:sunshine/widgets/try_again.dart';import 'loading_indicator.dart';class WeatherForm extends StatefulWidget {  @override  _WeatherFormState createState() => _WeatherFormState();}class _WeatherFormState extends State<WeatherForm> {  WeatherBloc weatherBloc;  final TextEditingController _cityController = TextEditingController();  bool get isPopulated => _cityController.text.isNotEmpty;  void callWeather() {    weatherBloc.add(GetWeatherEvent(city: _cityController.text));  }  @override  Widget build(BuildContext context) {    weatherBloc = BlocProvider.of<WeatherBloc>(context);    return BlocBuilder<WeatherBloc, WeatherState>(      bloc: weatherBloc,      builder: (context, state) {        if (state is InitialWeatherState) {          return Column(            children: <Widget>[              Container(                padding: const EdgeInsets.all(8),                child: TextField(                  controller: _cityController,                  decoration: InputDecoration(                      border: OutlineInputBorder(),                      hintText: 'Search for city'),                ),              ),              SearchRaisedButton(                  buttonText: 'Check city weather',                  isEnable: isPopulated,                  voidCallback: callWeather)            ],          );        }        if (state is WeatherLoadingState) {          return LoadingIndicator();        }        if (state is WeatherLoadedState) {          return ShowWeatherScreen(state.weather);        }        if (state is WeatherLoadingErrorState) {          return TryAgain(errorText: 'There is no city with name ${_cityController.text}');        }        return Container();      },    );  }  @override  void dispose() {    super.dispose();    weatherBloc.close();  }}