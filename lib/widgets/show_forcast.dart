import 'package:flutter/material.dart';import 'package:intl/intl.dart';import 'package:sunshine/models/weather_forecast.dart';class ShowForecastScreen extends StatelessWidget {  final WeatherForecastModel weather;  ShowForecastScreen(this.weather);  getIcon(final icon) {    var weatherPicture;    switch (icon) {      case '01d':        weatherPicture = 'assets/01d.png';        break;      case '01n':        weatherPicture = 'assets/01n.png';        break;      case '02d':        weatherPicture = 'assets/02d.png';        break;      case '02n':        weatherPicture = 'assets/02n.png';        break;      case '03d':        weatherPicture = 'assets/03d.png';        break;      case '03n':        weatherPicture = 'assets/03n.png';        break;      case '04d':        weatherPicture = 'assets/04d.png';        break;      case '04n':        weatherPicture = 'assets/04n.png';        break;      case '09d':        weatherPicture = 'assets/09d.png';        break;      case '09n':        weatherPicture = 'assets/09n.png';        break;      case '10d':        weatherPicture = 'assets/10d.png';        break;      case '10n':        weatherPicture = 'assets/10n.png';        break;      case '11d':        weatherPicture = 'assets/11d.png';        break;      case '11n':        weatherPicture = 'assets/11n.png';        break;      case '13d':        weatherPicture = 'assets/13d.png';        break;      case '13n':        weatherPicture = 'assets/13n.png';        break;      case '50d':        weatherPicture = 'assets/50d.png';        break;      case '50n':        weatherPicture = 'assets/50n.png';        break;    }    return weatherPicture;  }  String formatDate(DateTime date) {    var formatter = new DateFormat('yyyy-MMM-dd hh:mm');    String formatted = formatter.format(date);    return formatted;  }  @override  Widget build(BuildContext context) {    return Container(      padding: EdgeInsets.symmetric(horizontal: 16.0, vertical: 24.0),      height: MediaQuery.of(context).size.height * 0.40,      child: ListView.builder(        scrollDirection: Axis.horizontal,        shrinkWrap: true,        itemBuilder: (context, index) {          return Container(              width: MediaQuery.of(context).size.width * 0.6,              child: Card(                  child: Column(                children: weather.list[index].weather.map((e) {                  return Column(                    children: <Widget>[                      Column(                        children: <Widget>[                          ListTile(                            leading: Image.asset(                              getIcon(e.icon),                            ),                            title: Text(                                '${formatDate(weather.list[index].dtTxt)}'),                            subtitle: Text(                                'TEMP. C: ${weather.list[index].main.temp}'),                          ),                          ListTile(                            title: Text(                              'TEMP. C:${weather.list[index].main.temp} \nTEMP. MIN C:${weather.list[index].main.tempMin}\nTEMP. MAX C:${weather.list[index].main.tempMax}',                              style: TextStyle(fontSize: 13),                            ),                          ),                          ListTile(                            title: Text(                              'PRESURE: ${weather.list[index].main.pressure} \nHUMIDITY: ${weather.list[index].main.humidity}',                              style: TextStyle(fontSize: 13),                            ),                          )                        ],                      ),                    ],                  );                }).toList(),              )));        },        itemCount: weather.list.length, // this is a hardcoded value      ),    );  }}